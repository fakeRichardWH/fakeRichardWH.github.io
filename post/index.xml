<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on fakeRichardWH的个人网站</title>
    <link>http://localhost:1313/post/</link>
    <description>Recent content in Posts on fakeRichardWH的个人网站</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 11 Feb 2022 16:17:10 +0800</lastBuildDate><atom:link href="http://localhost:1313/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>pandas02</title>
      <link>http://localhost:1313/post/pandas02/</link>
      <pubDate>Fri, 11 Feb 2022 16:17:10 +0800</pubDate>
      
      <guid>http://localhost:1313/post/pandas02/</guid>
      <description>pandas数据读取 Pandas读取表格类型的数据然后进行分析,支持的数据类型和读取方法如下 数据类型 格式 读取方法 csv, tsv, txt 用逗号分隔或者tab分</description>
    </item>
    
    <item>
      <title>Leetcode03</title>
      <link>http://localhost:1313/post/leetcodeday03/</link>
      <pubDate>Thu, 27 Jan 2022 19:57:26 +0800</pubDate>
      
      <guid>http://localhost:1313/post/leetcodeday03/</guid>
      <description>广度优先搜索模版 核心思路 BFS核心思想就是把问题抽象为一个图，从一个节点开始，向四周扩散。一般来说，BFS都会使用到一个队列，这样就可以将一</description>
    </item>
    
    <item>
      <title>Pandas中loc和iloc区别</title>
      <link>http://localhost:1313/post/ml01/</link>
      <pubDate>Wed, 26 Jan 2022 19:25:43 +0800</pubDate>
      
      <guid>http://localhost:1313/post/ml01/</guid>
      <description>朴素贝叶斯 解决的是多分类问题 边缘概率 $P(X) = \sum_{Y}P(X,Y)$ 从直观上理解这个式子，要消除随机变量Y对联合概率的影响，那么就要固定每个Y，对联合概率求和，从而消</description>
    </item>
    
    <item>
      <title>Pandas中loc和iloc区别</title>
      <link>http://localhost:1313/post/pandas01/</link>
      <pubDate>Wed, 26 Jan 2022 17:25:43 +0800</pubDate>
      
      <guid>http://localhost:1313/post/pandas01/</guid>
      <description>loc vs iloc loc函数：通过行索引 &amp;ldquo;Index&amp;rdquo; 中的具体值来取行数据（如取&amp;quot;Index&amp;quot;为&amp;quot;A&amp;quot;的行）可以认为是利用行</description>
    </item>
    
    <item>
      <title>Lambda函数使用</title>
      <link>http://localhost:1313/post/pythonusefulfunc/</link>
      <pubDate>Fri, 21 Jan 2022 16:44:22 +0800</pubDate>
      
      <guid>http://localhost:1313/post/pythonusefulfunc/</guid>
      <description>匿名函数 以lambda 作为关键字,可以在一行内完成定义和声明，这个匿名函数由于没有实际的名称，所以一般在Python中没有什么复杂的功能。 语</description>
    </item>
    
    <item>
      <title>LeetcodeDay02</title>
      <link>http://localhost:1313/post/leetcodeday02/</link>
      <pubDate>Wed, 12 Jan 2022 14:55:48 +0800</pubDate>
      
      <guid>http://localhost:1313/post/leetcodeday02/</guid>
      <description>题目 前提条件： 两个有序数组均为正序列，且两个数组有且仅有一个会是空数组 nums1.length = m,nums1.length = n 如果m+n == 2k,那么中位数为第k和k+1位置的数据的之和的</description>
    </item>
    
    <item>
      <title>LeetcodeDay01</title>
      <link>http://localhost:1313/post/leetcodeday01/</link>
      <pubDate>Tue, 11 Jan 2022 12:21:12 +0800</pubDate>
      
      <guid>http://localhost:1313/post/leetcodeday01/</guid>
      <description>两数之和 思路1: 思路一: 对于nums数组中每个位置i上的x，要找到target-x,可以使用两层遍历，第一层遍历是遍历数组中的每个数字，第二</description>
    </item>
    
    <item>
      <title>Shortcuts</title>
      <link>http://localhost:1313/post/shortcuts/</link>
      <pubDate>Wed, 22 Dec 2021 16:52:47 +0800</pubDate>
      
      <guid>http://localhost:1313/post/shortcuts/</guid>
      <description>VSCODE快捷键配置 [Mac] 下载好Markdown All in One这个插件后： 先输入Command + Shift + p : ，再找到默认键盘设置:(Open Default Keyboard Shortcut Settings J</description>
    </item>
    
    <item>
      <title>BinarySearch</title>
      <link>http://localhost:1313/post/binarysearch/</link>
      <pubDate>Tue, 21 Dec 2021 21:31:27 +0800</pubDate>
      
      <guid>http://localhost:1313/post/binarysearch/</guid>
      <description>二分查找绕口令 管他左侧还右侧，搜索区间定乾坤 搜索一个元素时，搜索区间两端闭 while条件带等号，否则需要打补丁 if相等就返回，其他的事甭操心</description>
    </item>
    
    <item>
      <title>Python迭代器及常用函数</title>
      <link>http://localhost:1313/post/ooppython/</link>
      <pubDate>Sat, 11 Dec 2021 15:41:12 +0800</pubDate>
      
      <guid>http://localhost:1313/post/ooppython/</guid>
      <description>迭代器 可以被next()函数调用并且不断返回下一个值的对象统称为迭代器:Iterator 迭代对象 可以直接作用于for循环的对象，称为可迭代对</description>
    </item>
    
    <item>
      <title>Pytorch中view方法的坑</title>
      <link>http://localhost:1313/post/numpytensortraps/</link>
      <pubDate>Sat, 11 Dec 2021 14:41:12 +0800</pubDate>
      
      <guid>http://localhost:1313/post/numpytensortraps/</guid>
      <description>pytorch View视图 你咋就这么特别呢？ 查看Pytorch官方文档: PyTorch allows a tensor to be a View(视图) of an existing tensor.View(视图) tensor shares the same underlying data with</description>
    </item>
    
    <item>
      <title>深度学习-CNN相关01</title>
      <link>http://localhost:1313/post/deeplearning-cnn-fundamentals1/</link>
      <pubDate>Tue, 07 Dec 2021 19:41:09 +0800</pubDate>
      
      <guid>http://localhost:1313/post/deeplearning-cnn-fundamentals1/</guid>
      <description>在图像复原的过程中，图像上一点点噪声就可能对复原的结果产生较大影响，由于复原算法本身一般都会放大噪声，这时候需要在最优化的问题模型中添加一个</description>
    </item>
    
    <item>
      <title>leetcode-寻找入环节点</title>
      <link>http://localhost:1313/post/findloopnodeinlinkelist/</link>
      <pubDate>Sat, 04 Dec 2021 16:42:48 +0800</pubDate>
      
      <guid>http://localhost:1313/post/findloopnodeinlinkelist/</guid>
      <description>题目描述：给定两个可能存在环或者不存在环的单链表head1和head2，找到两个链表的第一个相交节点。 总体思路： 我们希望有一个函数能调用后，</description>
    </item>
    
    <item>
      <title>RecommendationSystem 01</title>
      <link>http://localhost:1313/post/recommendationsystem01/</link>
      <pubDate>Thu, 02 Dec 2021 18:46:07 +0800</pubDate>
      
      <guid>http://localhost:1313/post/recommendationsystem01/</guid>
      <description>推荐系统的实验方法分类 1.离线实验 通过日志系统，获取用户行为数据，按照一定格式生产出一个标准的数据集 将数据集划分为训练集和测试集 在训练集上训</description>
    </item>
    
    <item>
      <title>leetcode-Copy Linkedlist with Random pointer</title>
      <link>http://localhost:1313/post/copylistwithrand/</link>
      <pubDate>Wed, 24 Nov 2021 20:57:19 +0800</pubDate>
      
      <guid>http://localhost:1313/post/copylistwithrand/</guid>
      <description>给你一个长度为 n 的链表，每个节点包含一个额外增加的随机指针 random ，该指针可以指向链表中的任何节点或空节点。构造这个链表的 深拷贝。 深拷贝应该正好由</description>
    </item>
    
    <item>
      <title>java-Stack</title>
      <link>http://localhost:1313/post/stack/</link>
      <pubDate>Wed, 24 Nov 2021 17:30:02 +0800</pubDate>
      
      <guid>http://localhost:1313/post/stack/</guid>
      <description>为什么Java的集合类没有单独的Stack接口呢？因为有个遗留类名字就叫Stack，出于兼容性考虑，所以没办法创建Stack接口，只能用De</description>
    </item>
    
    <item>
      <title>leetcode-判断一个链表是否为回文结构</title>
      <link>http://localhost:1313/post/palindromelinkedlist/</link>
      <pubDate>Wed, 24 Nov 2021 17:17:26 +0800</pubDate>
      
      <guid>http://localhost:1313/post/palindromelinkedlist/</guid>
      <description>Q1: 判断一个链表 是否属于回文结构 1 2 3 4 5 6 7 8 9 // example1 input: 1 -&amp;gt; 2 -&amp;gt; 23 -&amp;gt; 23 -&amp;gt; 2 -&amp;gt; 1 output: true // example2 input: 1 -&amp;gt; 2 -&amp;gt; 23 -&amp;gt; 2 -&amp;gt; 1 output: true // example3 input: 1 -&amp;gt; 2 -&amp;gt; 23 -&amp;gt; 3 -&amp;gt; 1 output: false 思路</description>
    </item>
    
    <item>
      <title>利用Hugo和GitHub Pages搭建个人博客网站</title>
      <link>http://localhost:1313/post/hugocreatesite/</link>
      <pubDate>Wed, 03 Nov 2021 20:42:40 +0800</pubDate>
      
      <guid>http://localhost:1313/post/hugocreatesite/</guid>
      <description>GitHub设置 首先创建个人网站的一个repo： 注意命名规则:一定是你的用户名.github.io比如sophshep.github.io 详</description>
    </item>
    
  </channel>
</rss>
